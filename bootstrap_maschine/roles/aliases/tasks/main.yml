---
 

# Installiere zsh und benötigte Abhängigkeiten
- name: Install zsh and dependencies
  apt:
    name:
      - zsh
      - git
      - curl
    state: present
    update_cache: yes

# Setze zsh als Standard-Shell für root und rkhunter
- name: Set zsh as default shell for rkhunter
  user:
    name: rkhunter
    shell: /usr/bin/zsh

- name: Set zsh as default shell for root
  user:
    name: root
    shell: /usr/bin/zsh

# Installiere Oh My Zsh für beide Benutzer
# Installiere Oh My Zsh für root
- name: Check if Oh My Zsh is installed for root
  stat:
    path: /root/.oh-my-zsh
  register: ohmyzsh_root_installed

- name: Install Oh My Zsh for root
  shell: |
    RUNZSH=no CHSH=no sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  when: not ohmyzsh_root_installed.stat.exists

# Installiere Oh My Zsh für rkhunter
- name: Check if Oh My Zsh is installed for rkhunter
  stat:
    path: /home/rkhunter/.oh-my-zsh
  register: ohmyzsh_rkhunter_installed

- name: Install Oh My Zsh for rkhunter
  shell: |
    RUNZSH=no CHSH=no sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  when: not ohmyzsh_rkhunter_installed.stat.exists

# Installiere Plugins für zsh
- name: Install zsh-autosuggestions plugin
  git:
    repo: https://github.com/zsh-users/zsh-autosuggestions
    dest: "{{ item }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
    version: master
  with_items:
    - /home/rkhunter
    - /root
  become: yes

- name: Install zsh-syntax-highlighting plugin
  git:
    repo: https://github.com/zsh-users/zsh-syntax-highlighting
    dest: "{{ item }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
    version: master
  with_items:
    - /home/rkhunter
    - /root
  become: yes

- name: Install zsh-completions plugin
  git:
    repo: https://github.com/zsh-users/zsh-completions
    dest: "{{ item }}/.oh-my-zsh/plugins/zsh-completions"
    version: master
  with_items:
    - /home/rkhunter
    - /root
  become: yes

- name: Install zsh-history-substring-search plugin
  git:
    repo: https://github.com/zsh-users/zsh-history-substring-search
    dest: "{{ item }}/.oh-my-zsh/plugins/zsh-history-substring-search"
    version: master
  with_items:
    - /home/rkhunter
    - /root
  become: yes

# Kopiere die angepasste .zshrc mit den gewünschten Plugins
- name: Deploy .zshrc for rkhunter
  copy:
    content: |
      # Path to your Oh My Zsh installation.
      export ZSH="$HOME/.oh-my-zsh"

      ZSH_THEME="rkhunter"

      CASE_SENSITIVE="true"
      ENABLE_CORRECTION="true"
      DISABLE_UNTRACKED_FILES_DIRTY="true"
      HIST_STAMPS="dd.mm.yyyy"

      plugins=(
        git
        colored-man-pages
        command-not-found
        zsh-autosuggestions
        zsh-completions
        zsh-history-substring-search
        zsh-syntax-highlighting
      )

      source $ZSH/oh-my-zsh.sh

      if [[ -n $SSH_CONNECTION ]]; then
        export EDITOR='vim'
      else
        export EDITOR='nvim'
      fi

      # LS configuration:
      export LS_OPTIONS='--color=auto'
      eval "$(dircolors)"
      alias ls='ls $LS_OPTIONS'
      alias ll='ls $LS_OPTIONS -lah'
      alias l='ls $LS_OPTIONS -lah'

      # Some more alias to avoid making mistakes:
      alias rm='rm -i'
      alias cp='cp -i'
      alias mv='mv -i'

      # History configuration:
      HISTCONTROL=ignoreboth
      HISTFILESIZE=999999999
      HISTSIZE=999999999

      # Farbkodierungen
      DATE="\033[0;35m"    # Lila
      DATE_NOCOLOR="\033[0m"

      # History-Formatierung
      function zsh_history_format {
          local timestamp
          timestamp=$(date "+%Y-%m-%d %H:%M:%S")
          echo -e "${DATE}[${timestamp}]${DATE_NOCOLOR}"
      }

      alias h='fc -l 1 | sed "s/^[0-9]*/$(zsh_history_format)/"'

    dest: /home/rkhunter/.zshrc
    owner: rkhunter
    group: users
    mode: 0644

- name: Deploy .zshrc for root
  copy:
    content: |
      # Path to your Oh My Zsh installation.
      export ZSH="$HOME/.oh-my-zsh"

      ZSH_THEME="rkhunter"

      CASE_SENSITIVE="true"
      ENABLE_CORRECTION="true"
      DISABLE_UNTRACKED_FILES_DIRTY="true"
      HIST_STAMPS="dd.mm.yyyy"

      plugins=(
        git
        colored-man-pages
        command-not-found
        zsh-autosuggestions
        zsh-completions
        zsh-history-substring-search
        zsh-syntax-highlighting
      )

      source $ZSH/oh-my-zsh.sh

      if [[ -n $SSH_CONNECTION ]]; then
        export EDITOR='vim'
      else
        export EDITOR='nvim'
      fi

      # LS configuration:
      export LS_OPTIONS='--color=auto'
      eval "$(dircolors)"
      alias ls='ls $LS_OPTIONS'
      alias ll='ls $LS_OPTIONS -lah'
      alias l='ls $LS_OPTIONS -lah'

      # Some more alias to avoid making mistakes:
      alias rm='rm -i'
      alias cp='cp -i'
      alias mv='mv -i'

      # History configuration:
      HISTCONTROL=ignoreboth
      HISTFILESIZE=999999999
      HISTSIZE=999999999

      # Farbkodierungen
      DATE="\033[0;35m"    # Lila
      DATE_NOCOLOR="\033[0m"

      # History-Formatierung
      function zsh_history_format {
          local timestamp
          timestamp=$(date "+%Y-%m-%d %H:%M:%S")
          echo -e "${DATE}[${timestamp}]${DATE_NOCOLOR}"
      }

      alias h='fc -l 1 | sed "s/^[0-9]*/$(zsh_history_format)/"'

    dest: /root/.zshrc
    owner: root
    group: root
    mode: 0644

# Backup: Kopiere die .bashrc-Dateien
- name: Copy .bashrc for rkhunter
  copy:
    src: files/.bashrc_rkhunter
    dest: /home/rkhunter/.bashrc
    owner: rkhunter
    group: users
    mode: 0644

- name: Copy .bashrc for root
  copy:
    src: files/.bashrc_root
    dest: /root/.bashrc
    owner: root
    group: root
    mode: 0644

# Kopiere das benutzerdefinierte Zsh-Theme
- name: Copy custom rkhunter.zsh-theme
  copy:
    src: files/rkhunter.zsh-theme
    dest: "{{ item }}/.oh-my-zsh/themes/rkhunter.zsh-theme"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644
  with_items:
    - /home/rkhunter
    - /root

- name: Ensure log directory exists
  file:
    path: /var/log/ansible
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Mark this role as executed
  file:
    path: "/var/log/ansible/{{ role_name }}.done"
    state: touch
    mode: "0644"